!    -*- f90 -*-
! Note: the context of this file is case sensitive.
!
! This pyf signature file has been hand edited using the automatically
! generated version in _pydlpoly_raw.pyf
!
!  (C)  R. Schmid (RUB, 2010)



python module _pydlpoly ! in 
    interface  ! in :_pydlpoly
        module pydlpoly ! in :_pydlpoly:pydlpoly.f90
            integer :: nstep
            integer :: nstrun
            integer :: mxnode
            integer :: idnode
            integer :: imcon
            integer :: keytol
            integer :: natms2
            integer :: natms
            integer :: keyens
            integer :: keyver
            integer :: keyres
            integer :: keyfce
            integer :: keyfld
            integer :: ntpmls
            integer :: numacc
            integer :: ntpatm
            integer :: levcfg
            logical :: loptim
            logical :: lminim
            logical :: lzero
            logical :: recycle
            logical :: qeq
            logical :: newlst
            logical :: loglnk
            real(kind=8) :: degfre
            real(kind=8) :: consv
            real(kind=8) :: conint
            real(kind=8) :: engke
            real(kind=8) :: engfld
            real(kind=8) :: engcfg
            real(kind=8) :: engang
            real(kind=8) :: engshl
            real(kind=8) :: engtke
            real(kind=8) :: engsrp
            real(kind=8) :: engmet
            real(kind=8) :: engfbp
            real(kind=8) :: engter
            real(kind=8) :: engtet
            real(kind=8) :: engunit
            real(kind=8) :: enginv
            real(kind=8) :: engdih
            real(kind=8) :: engrot
            real(kind=8) :: engbnd
            real(kind=8) :: engcpe
            real(kind=8) :: engtbp
            real(kind=8) :: elrc
            real(kind=8) :: tstep
            real(kind=8) :: opttol
            real(kind=8) :: temp
            real(kind=8) :: chit
            real(kind=8) :: press
            real(kind=8) :: chip
            real(kind=8) :: taut
            real(kind=8) :: taup
            real(kind=8) :: sigma
            real(kind=8) :: rvdw
            real(kind=8) :: rcut
            real(kind=8) :: delr
            real(kind=8) :: dlrpot
            real(kind=8) :: stptmp
            real(kind=8) :: stpprs
            real(kind=8) :: stpcns
            real(kind=8) :: stpvol
            subroutine init_dlpoly ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine init_dlpoly
            subroutine allocate_dlpoly ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine allocate_dlpoly
            subroutine setup_dlpoly ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine setup_dlpoly
            subroutine reload_field
            end subroutine reload_field
            subroutine init_dyn(skip_REVOLD) ! in :_pydlpoly:pydlpoly.f90:pydlpoly
               integer,intent(in) :: skip_REVOLD
            end subroutine init_dyn
            subroutine dynamics() ! in :_pydlpoly:pydlpoly.f90:pydlpoly
!              use pydlpoly__user__routines
!              external run_qeq
            end subroutine dynamics
!            subroutine dynamics_stripped(run_qeq) ! in :_pydlpoly:pydlpoly.f90:pydlpoly
!              use pydlpoly__user__routines
!              external run_qeq
!            end subroutine dynamics_stripped
            subroutine dyns_start() ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine dyns_start
            subroutine dyns_step_fh ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine dyns_step_fh
!            subroutine dyns_step_energy(run_qeq) ! in :_pydlpoly:pydlpoly.f90:pydlpoly
!              use pydlpoly__user__routines
!              external run_qeq
!            end subroutine dyns_step_energy
            subroutine dyns_step_sh ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine dyns_step_sh
!            subroutine dyns_finish ! in :_pydlpoly:pydlpoly.f90:pydlpoly
!            end subroutine dyns_finish
            
            subroutine finish_dlpoly ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine finish_dlpoly
            subroutine calc_energy_force ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine calc_energy_force
            subroutine write_config(fname,level) ! in :_pydlpoly:pydlpoly.f90:pydlpoly
                character*(*) :: fname
                integer :: level
            end subroutine write_config
            subroutine update_celprp ! in :_pydlpoly:pydlpoly.f90:pydlpoly
            end subroutine update_celprp
            subroutine get_atmnam(name,i) ! in :_pydlpoly:pydlpoly.f90:pydlpoly
                character*8 intent(out) :: name
                integer     intent(in)  :: i
            end subroutine get_atmnam
           subroutine init_dlpoly_random()
           end subroutine init_dlpoly_random
           subroutine update_vdw_tables()
           end subroutine update_vdw_tables
        end module pydlpoly

        module config_module ! in :_pydlpoly:config_module.f90
            ! character*8 allocatable,dimension(:)  :: atmnam
            real(kind=8) allocatable,dimension(:)   :: xxx
            real(kind=8) allocatable,dimension(:)   :: yyy
            real(kind=8) allocatable,dimension(:)   :: zzz
            real(kind=8) allocatable,dimension(:)   :: fxx
            real(kind=8) allocatable,dimension(:)   :: fyy
            real(kind=8) allocatable,dimension(:)   :: fzz
            real(kind=8) allocatable,dimension(:)   :: vxx
            real(kind=8) allocatable,dimension(:)   :: vyy
            real(kind=8) allocatable,dimension(:)   :: vzz
            real(kind=8) allocatable,dimension(:)   :: chge
            real(kind=8) allocatable,dimension(:)   :: core_chge
            real(kind=8) allocatable,dimension(:)   :: qsigma
            real(kind=8) allocatable,dimension(:)   :: pot
            real(kind=8) allocatable,dimension(:)   :: core_pot            
            real(kind=8) allocatable,dimension(:,:) :: q_hess
            real(kind=8) allocatable,dimension(:)   :: weight
            integer      allocatable,dimension(:,:) :: list
            integer      allocatable,dimension(:)   :: lentry
            integer      allocatable,dimension(:)   :: lstfrz
            real(kind=8) dimension(9) :: cell
            real(kind=8) dimension(9) :: stress
            real(kind=8) dimension(10):: celprp
            real(kind=8)              :: enc_self
            real(kind=8)              :: enc_val
            real(kind=8)              :: enc_core
            real(kind=8)              :: enc_coreval
            character dimension(80,1),intent(c) :: sysname
            character dimension(80,1),intent(c) :: cfgname
            logical :: recharge
            logical :: time
            logical :: use_core_charge
            logical :: get_core_pot
            logical :: ltrackimg
            integer     allocatable,dimension(:)    :: imgx
            integer     allocatable,dimension(:)    :: imgy
            integer     allocatable,dimension(:)    :: imgz
            integer     allocatable,dimension(:)    :: pol_ignore
            subroutine  alloc_trackimg_arrays(idnode, mxnode)
              integer :: idnode
              integer :: mxnode
            end subroutine  alloc_trackimg_arrays
        end module config_module

        module setup_module ! in :_pydlpoly:setup_module.f90
            integer :: mxatms
            logical :: qeq_iter
            logical :: calc_hess
            logical :: all_coul
        end module setup_module
     
        module exclude_module ! in :_pydlpoly:exclude_module.f90
          integer allocatable, dimension(:,:):: lexatm
          integer allocatable, dimension(:)  :: nexatm
          logical, dimension(4)              :: mapper
          logical                            :: chklist
          subroutine exclude(idnode,mxnode,natms,ntpmls) ! in :_pydlpoly:exclude_module.f90:exclude_module
          end subroutine exclude
          subroutine exclude_atom(idnode,mxnode,natms,ntpmls) ! in :_pydlpoly:exclude_module.f90:exclude_module
          end subroutine exclude_atom
        end module exclude_module
        
        module bonds_module
          real(8), allocatable, dimension(:,:) :: prmbnd
          integer, allocatable, dimension(:,:) :: listbnd
          integer, allocatable, dimension(:)   :: keybnd
        end module bonds_module

        module angles_module
          real(8), allocatable, dimension(:,:) :: prmang
          integer, allocatable, dimension(:,:) :: listang
          integer, allocatable, dimension(:)   :: keyang
        end module angles_module

        module dihedral_module
          real(8), allocatable, dimension(:,:) :: prmdih
          integer, allocatable, dimension(:,:) :: listdih
          integer, allocatable, dimension(:)   :: keydih
        end module dihedral_module

        module inversion_module
          real(8), allocatable, dimension(:,:) :: prminv
          integer, allocatable, dimension(:,:) :: listinv
          integer, allocatable, dimension(:)   :: keyinv
        end module inversion_module

        module coulomb_module
          real(8), allocatable, dimension(:) :: Jij
          integer, allocatable, dimension(:) :: Jij_mapper
          logical                            :: valid_Jij
          logical                            :: store_Jij
          subroutine init_Jij(idnode)
              integer        :: idnode
          end subroutine init_Jij
          subroutine allocate_Jij(totsize,idnode)
             integer     :: totsize
             integer     :: idnode
          end subroutine allocate_Jij
          subroutine create_Jij_mapper(idnode,mxnode,natms,loglnk,maxJij)
             integer     :: idnode
             integer     :: mxnode
             integer     :: natms
             logical     :: loglnk
             integer, intent(out) :: maxJij
          end subroutine create_Jij_mapper
          subroutine zero_Jij()
          end subroutine zero_Jij
          subroutine apply_Jij(idnode,mxnode,natms,loglnk, lcon, lconmol)
             integer     :: idnode
             integer     :: mxnode
             integer     :: natms
             logical     :: loglnk
             logical     :: lcon
             logical     :: lconmol
          end subroutine apply_Jij
          subroutine constrain_qpot_permol(idnode,mxnode,qpot, natoms, molpot, nmols, natpermol)
             integer,intent(in)                                     :: idnode
             integer,intent(in)                                     :: mxnode
             integer,intent(in)                                     :: natoms
             integer,intent(in)                                     :: nmols
             real(8),dimension(natoms),depend(natoms),intent(inout) :: qpot
             real(8),dimension(nmols),depend(nmols),intent(inout)   :: molpot
             integer,dimension(nmols),depend(nmols),intent(in)      :: natpermol
          end subroutine constrain_qpot_permol

        end coulomb_module

        module vdw_module ! in :_pydlpoly:vdw_module.f90
            real(kind=8) allocatable,dimension(:,:)   :: vvv
            real(kind=8) allocatable,dimension(:,:)   :: vvvr
            real(kind=8) allocatable,dimension(:,:)   :: ggg
            logical                                   :: lsrdamp
            real(kind=8)                              :: srdamp_ener
            logical                                   :: lspltvdw
            logical                                   :: skip_bonded
			real(8), allocatable, dimension(:,:)      :: prmvdw
        end module vdw_module

        module lbfgs_module
            real(8)                      :: EPS, XTOL, GTOL, STPMIN, STPMAX
            integer                      :: M, LP, MP
            integer, dimension(2)        :: IPRINT
            logical                      :: DIAGCO
            real(8) allocatable, dimension(:) :: DIAG
            integer                      :: INFO
            integer                      :: ITER
            integer                      :: NFEV
            real(8)                      :: GNORM
            real(8)                      :: RMSG
            subroutine lbfgs_init(ndf, mdim, epsil)
              integer, intent(in) :: ndf, mdim
              real(8), intent(in) :: epsil
            end subroutine lbfgs_init
            subroutine lbfgs_free()
            end subroutine lbfgs_free
            subroutine lbfgs(F, G, X, N, IFLAG)
              integer intent(in)                            :: N
              real(8) dimension(N),depend(N),intent(inout)  :: X
              real(8) dimension(N),depend(N),intent(in)     :: G
              real(8) intent(in)     :: F
              integer intent(inout)  :: IFLAG
            end subroutine lbfgs
        end module lbfgs_module

        module timing_module ! in :_pydlpoly:timing_module.f90
            real(kind=8) dimension(10) :: timers
            real(kind=8) :: time_init
            integer dimension(10) :: tcounts
            integer parameter,optional :: ntimers=10
            subroutine timer_init ! in :_pydlpoly:timing_module.f90:timing
            end subroutine timer_init
            subroutine timer_on(t) ! in :_pydlpoly:timing_module.f90:timing
                integer :: t
            end subroutine timer_on
            subroutine timer_stop ! in :_pydlpoly:timing_module.f90:timing
            end subroutine timer_stop
            subroutine timer_start ! in :_pydlpoly:timing_module.f90:timing
            end subroutine timer_start
            subroutine timer_off ! in :_pydlpoly:timing_module.f90:timing
            end subroutine timer_off
            subroutine timer_since_init(tsi) ! in :_pydlpoly:timing_module.f90:timing
            real (kind_8) intent(out)  :: tsi
            end subroutine timer_since_init
        end module timing_module

        module molecule_module ! in :_pydlpoly:molecule_module.f90
            logical :: lmolecules
            logical :: lmol_ekin
            logical :: lmol_lrcorr
            integer :: mx_molecules
            integer allocatable,dimension(:) :: mol_which
            integer allocatable,dimension(:) :: mol_natoms
            real(kind=8) allocatable,dimension(:) :: mol_lamb_vdw
            real(kind=8) allocatable,dimension(:) :: mol_lamb_vdwr
            real(kind=8) allocatable,dimension(:) :: mol_lamb_coul
            real(kind=8) allocatable,dimension(:) :: mol_lamb_ekin
            real(kind=8) allocatable,dimension(:) :: mol_lambint_coul
            real(kind=8) allocatable,dimension(:) :: mol_lambint_vdw
            real(kind=8) allocatable,dimension(:) :: mol_dlam_vdw
            real(kind=8) allocatable,dimension(:) :: mol_dlam_vdwr
            real(kind=8) allocatable,dimension(:) :: mol_dlam_coul
            real(kind=8) allocatable,dimension(:) :: mol_ekin
            real(kind=8)                          :: mol_dlam_lrcorr
            real(8), allocatable,dimension(:,:)   :: mol_dip    
            logical lcalc_moldip
            subroutine init_molecules(nmolecules) ! in :_pydlpoly:molecule_module.f90:molecule_module
                integer :: nmolecules
            end subroutine init_molecules
            subroutine molecules_gsum_dlam ! in :_pydlpoly:molecule_module.f90:molecule_module
            end subroutine molecules_gsum_dlam
            subroutine molecules_calc_moldip
            end subroutine molecules_calc_moldip
        end module molecule_module

        module metamd_module
            subroutine drop_energy(grid,pos,W,start,resolution,celllength,gwidthfact, ncalc, startcalc, energylist)
               integer, intent(in)                                         :: grid
               real*8, dimension(3), intent(in)                            :: pos
               real*8, intent(in)                                          :: W
               real*8, dimension(3), intent(in)                            :: start
               real*8, dimension(3), intent(in)                            :: resolution
               real*8, dimension(3), intent(in)                            :: celllength
               real*8, intent(in)                                          :: gwidthfact
               integer, intent(in)                                         :: ncalc
               integer, intent(in)                                         :: startcalc
               real*8 dimension(grid,grid,grid),depend(grid),intent(inout) :: energylist
            end subroutine drop_energy
        end module metamd_module
        
        module property_module
            real(kind=8) allocatable,dimension(:) :: stpval
            real(kind=8) allocatable,dimension(:) :: sumval
            real(kind=8) allocatable,dimension(:) :: ssqval
        end module property_module

        module external_field_module
            real(kind=8)  allocatable,dimension(:) :: prmfld
            integer                                :: split_index
            real(kind=8)  dimension(3)             :: dip
            real(kind=8)  dimension(3)             :: dip_ref
            logical                                :: lcalc_dip
        end module external_field_module

        module comm_module
            integer                 :: pydlpoly_comm
            integer                 :: error_code
        end module comm_module

        module nlist_builders_module
          logical                   :: nlst_notest
          logical                   :: nlst_rebuild
          logical                   :: nlst_report
        end module nlist_builders_module

        subroutine csend(tagmsg,buf,length,pe,idum) ! in :_pydlpoly:basic_comms.f90
          integer                   :: tagmsg
          real(kind=8),dimension(:) :: buf
          integer                   :: length
          integer                   :: pe
          integer                   :: idum
        end subroutine csend
        subroutine crecv(tagmsg,buf,length) ! in :_pydlpoly:basic_comms.f90
          integer                   :: tagmsg
          real(kind=8),dimension(:) :: buf
          integer                   :: length
        end subroutine crecv
        subroutine gsync() ! in :_pydlpoly:basic_comms.f90
        end subroutine gsync

        subroutine bcast_d(d_array,n) 
            real(kind=8) dimension(n),intent(inout),depend(n) ::d_array
            integer intent(in)                                 ::n
        end subroutine bcast_d

        subroutine gdsum(a,n,b)
            real(kind=8) dimension(n),intent(inout),depend(n) :: a
            real(kind=8) dimension(n),intent(inout),depend(n) :: b
            integer intent(in)                                ::n
        end subroutine gdsum

        subroutine bcast_i(i_array,n) ! in :_pydlpoly:basic_comms.f90
            integer dimension(n),intent(inout),depend(n) :: i_array
            integer intent(in) :: n
        end subroutine bcast_i

        subroutine bcast_c(c_array,n) ! in :_pydlpoly:basic_comms.f90
            character*(*) intent(inout) :: c_array
            integer intent(in) :: n
        end subroutine bcast_c

        subroutine exitcomms(ierr)
            integer intent(in) :: ierr
            intent(callback, hide) :: pyerror
            external pyerror
            call pyerror()
        end subroutine exitcomms

    end interface 
end python module _pydlpoly

