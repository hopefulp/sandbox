/*
 * This file was generated automatically by xsubpp version 1.9508 from the
 * contents of FSearch.xs. Do not edit this file, edit FSearch.xs instead.
 *
 *	ANY CHANGES MADE HERE WILL BE LOST!
 *
 */

#line 1 "FSearch.xs"
#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

#include "FSearch.h"

static int
not_here(char *s)
{
    croak("%s not implemented on this architecture", s);
    return -1;
}

static double
constant(char *name, int arg)
{
    errno = 0;
    switch (*name) {
    }
    errno = EINVAL;
    return 0;

not_there:
    errno = ENOENT;
    return 0;
}


#line 39 "FSearch.c"
XS(XS_FSearch_constant); /* prototype to pass -Wmissing-prototypes */
XS(XS_FSearch_constant)
{
    dXSARGS;
    if (items != 2)
	Perl_croak(aTHX_ "Usage: FSearch::constant(name, arg)");
    {
	char *	name = (char *)SvPV_nolen(ST(0));
	int	arg = (int)SvIV(ST(1));
	double	RETVAL;
	dXSTARG;

	RETVAL = constant(name, arg);
	XSprePUSH; PUSHn((double)RETVAL);
    }
    XSRETURN(1);
}

XS(XS_FSearch_setResidual); /* prototype to pass -Wmissing-prototypes */
XS(XS_FSearch_setResidual)
{
    dXSARGS;
    if (items != 6)
	Perl_croak(aTHX_ "Usage: FSearch::setResidual(solvAtoms, rMax, j, tot, residuals, vRes)");
    {
	int *	double	rMax = (double)SvNV(ST(1));
	int	j = (int)SvIV(ST(2));
	int	tot = (int)SvIV(ST(3));
	double *	int *
	setResidual(solvAtoms, rMax, j, tot, residuals, vRes);
    }
    XSRETURN_EMPTY;
}

XS(XS_FSearch_getResidual); /* prototype to pass -Wmissing-prototypes */
XS(XS_FSearch_getResidual)
{
    dXSARGS;
    if (items != 6)
	Perl_croak(aTHX_ "Usage: FSearch::getResidual(arrayIndex, distArray, residuals, validRes, tot, boxLen)");
    {
	int	arrayIndex = (int)SvIV(ST(0));
	double **	double *	int *;
	int	tot = (int)SvIV(ST(4));
	double;
	int	RETVAL;
	dXSTARG;

	RETVAL = getResidual(arrayIndex, distArray, residuals, validRes, tot, boxLen);
	XSprePUSH; PUSHi((IV)RETVAL);
    }
    XSRETURN(1);
}

#ifdef __cplusplus
extern "C"
#endif
XS(boot_FSearch); /* prototype to pass -Wmissing-prototypes */
XS(boot_FSearch)
{
    dXSARGS;
    char* file = __FILE__;

    XS_VERSION_BOOTCHECK ;

        newXS("FSearch::constant", XS_FSearch_constant, file);
        newXS("FSearch::setResidual", XS_FSearch_setResidual, file);
        newXS("FSearch::getResidual", XS_FSearch_getResidual, file);
    XSRETURN_YES;
}

