#PBS -N TITLE
#PBS -q dque
#PBS -l nodes=N:ppn=NN
#PBS -l walltime=TTT:00:00

#!/bin/tcsh
set NPROC = `wc -l < $PBS_NODEFILE`
set NHOST = `hostname | awk '{split($0,res,"[0-9]");print res[1]}'`
switch(${NHOST})
	case idft:
		set NSM = 8
		set NPR = `expr $NPROC \/ 8`
		set SCAL = '.FALSE.'
		set MPI = "/opt/mpi/intel-12.1.6/mvapich2-1.8.1/bin/mpirun_rsh -np $NPROC -hostfile $PBS_NODEFILE"
		set EXEC = "/opt/applic/vasp/bin/vasp-5.3.5-xe11-static-mvapich2-1.8.1-TYPE"
		setenv LD_LIBRARY_PATH /opt/intel/composer_xe_2011_sp1.13.367/compiler/lib/intel64:/opt/intel/composer_xe_2011_sp1.13.367/mkl/lib/intel64:/opt/mpi/intel-12.1.6/mvapich2-1.8.1/lib:$LD_LIBRARY_PATH
	breaksw
	case kdft:
		set NSM = 6
		set NPR = `expr $NPROC \/ 12`
		set SCAL = '.FALSE.'
		set MPI = "/opt/intel/Compiler/composer_xe_2011_sp1.13.367/mpi/openmpi-1.6.3/bin/mpirun -np $NPROC -hostfile $PBS_NODEFILE"
		set EXEC = "/opt/applic/vasp/bin/vasp-5.3.5-xe11-static-openmpi-1.6.3-TYPE"
		setenv LD_LIBRARY_PATH /opt/intel/Compiler/composer_xe_2011_sp1.13.367/compiler/lib/intel64:/opt/intel/Compiler/composer_xe_2011_sp1.13.367/mkl/lib/intel64:/opt/intel/Compiler/composer_xe_2011_sp1.13.367/mpi/openmpi-1.6.3/lib:$LD_LIBRARY_PATH
	breaksw
	case psi:
		set NSM = 8
		set NPR = `expr $NPROC \/ 16`
		set SCAL = '.TRUE.'
		set MPI = "/opt/mpi/intel-12.1.6/openmpi-1.6.3/bin/mpirun -np $NPROC -hostfile $PBS_NODEFILE"
		set EXEC = "/opt/applic/vasp/bin/vasp-5.3.5-xe11-static-openmpi-1.6.3-TYPE"
		setenv LD_LIBRARY_PATH /opt/intel/composer_xe_2011_sp1.13.367/compiler/lib/intel64:/opt/intel/composer_xe_2011_sp1.13.367/mkl/lib/intel64:/opt/mpi/intel-12.1.6/openmpi-1.6.3/lib:$LD_LIBRARY_PATH
	breaksw
	case rho:
		set NSM = 8
		set NPR = `expr $NPROC \/ 16`
		set SCAL = '.FALSE.'
		set MPI = "/opt/mpi/intel-12/openmpi-1.8.1/bin/mpirun -np $NPROC -hostfile $PBS_NODEFILE"
		set EXEC = "/opt/applic/vasp/bin/vasp-5.3.5-if12-openmpi-1.8.1-TYPE"
		setenv LD_LIBRARY_PATH /opt/intel/composer_xe_2011_sp1.13.367/compiler/lib/intel64:/opt/intel/composer_xe_2011_sp1.13.367/mkl/lib/intel64:/opt/mpi/intel-12/openmpi-1.8.1/lib:$LD_LIBRARY_PATH
	breaksw
	case qch:
	case qch:
		set NSM = 4
		set NPR = `expr $NPROC \/ 8`
		set SCAL = '.FALSE.'
		set MPI = "/opt/intel/Compiler/composer_xe_2011_sp1.13.367/mpi/openmpi-1.6.3/bin/mpirun -np $NPROC -hostfile $PBS_NODEFILE"
		set EXEC = "/opt/applic/vasp/bin/vasp-5.3.5-xe11-static-openmpi-1.6.3-TYPE"
		setenv LD_LIBRARY_PATH /opt/intel/Compiler/composer_xe_2011_sp1.13.367/compiler/lib/intel64:/opt/intel/Compiler/composer_xe_2011_sp1.13.367/mkl/lib/intel64:/opt/intel/Compiler/composer_xe_2011_sp1.13.367/mpi/openmpi-1.6.3/lib:$LD_LIBRARY_PATH
	breaksw
	default:
		set NSM = 4
		set NPR = 1
		set SCAL = '.FALSE.'
		set MPI = "/opt/mpi/intel-12.1.6/openmpi-1.6.3/bin/mpirun -np $NPROC -hostfile $PBS_NODEFILE"
		set EXEC = "/opt/applic/vasp/bin/vasp-5.3.5-xe11-static-openmpi-1.6.3-TYPE"
		setenv LD_LIBRARY_PATH /opt/intel/composer_xe_2011_sp1.13.367/compiler/lib/intel64:/opt/intel/composer_xe_2011_sp1.13.367/mkl/lib/intel64:/opt/mpi/intel-12.1.6/openmpi-1.6.3/lib:$LD_LIBRARY_PATH
	breaksw
endsw

cd $PBS_O_WORKDIR

if ((`grep 'LUSE_VDW = .TRUE.' INCAR|wc -l`)&&!(`grep '#LUSE_VDW = .TRUE.' INCAR|wc -l`)) then
    cp /opt/applic/vasp/bin/vdw_kernel.bindat ./
endif

set pwdir = `pwd`
set fname = `basename pwdir`
if(-e job.${PBS_JOBID}.ing) then
	rm job.${PBS_JOBID}.ing
endif
touch job.${PBS_JOBID}.ing
head -n 1 $PBS_NODEFILE > job.${PBS_JOBID}.ing
date >> job.${PBS_JOBID}.ing

sed -i -e 's|SYSTEM = [^\f\r\t\n\v]*|SYSTEM = '${fname}'|' INCAR
sed -i -e 's|NSIM = [^\f\r\t\n\v]*|NSIM = '${NSM}'|' INCAR
sed -i -e 's|NPAR = [^\f\r\t\n\v]*|NPAR = '${NPR}'|' INCAR

sed -i -e 's|LSCALAPACK = [^t^b]*|LSCALAPACK = '${SCAL}'|' INCAR
sed -i -e 's|LSCALU = [^t^b]*|LSCALU = '${SCAL}'|' INCAR

if(-z CHGCAR) then
    echo 'CHGCAR empty'
	sed -i -e 's|ISTART = [0-9]|ISTART = 0|' INCAR
	sed -i -e 's|ICHARG = [0-9]|ICHARG = 2|' INCAR
endif

if(-z POSCAR) then
    echo 'POSCAR empty'
	if (-e log/0POSCAR) then
		cp log/0POSCAR POSCAR
	endif
	if (-e 1stPOSCAR) then
		cp 1stPOSCAR POSCAR
	endif
endif

#sed -i -e 's|IBRION = [0-9]|IBRION = 2|' INCAR
#sed -i -e 's|#POTIM|POTIM|' INCAR
#sed -i -e 's|POTIM = 0.[0-9]|POTIM = 0.5|' INCAR
#sed -i -e 's|EDIFFG = [^\f\r\t\n\v]*|EDIFFG = -0.2|' INCAR
$MPI $EXEC >> $PBS_JOBNAME.log
mv $PBS_JOBNAME.log $PBS_JOBNAME.0.out
set gre0 = `grep E0 OSZICAR |wc -l`

if (${gre0} == 1) then
	cp $PBS_JOBNAME.0.out $PBS_JOBNAME.1st.out
	mv $PBS_JOBNAME.0.out $PBS_JOBNAME.out
	mv job.${PBS_JOBID}.ing job.${PBS_JOBID}.fin
	date >> job.${PBS_JOBID}.fin
else
	cp $PBS_JOBNAME.0.out $PBS_JOBNAME.1st.out
	mkdir log
	cp POSCAR log/0POSCAR
	cp CONTCAR log/0CONTCAR
	cp XDATCAR log/0XDATCAR
	cp OUTCAR log/0OUTCAR
	cp OSZICAR log/0OSZICAR
	cp CONTCAR POSCAR
	
	#set t1 = `grep trialstep $PBS_JOBNAME.1st.out | awk '{print $13}' | cut -d\) -f1`
	#set t2 = `printf '%4.2f' $t1`
	#set t3 = `echo "scale = 1 ; $t2 / 2"|bc`
	#set pim = `printf '%3.1f' $t3`
	#if ($pim == '0.0') then
	#	set pim = 0.1
	#endif
	
	sed -i -e 's|ISTART = [0-9]|ISTART = 1|' INCAR
	sed -i -e 's|ICHARG = [0-9]|ICHARG = 1|' INCAR
	#sed -i -e 's|#POTIM|POTIM|' INCAR
	#sed -i "s,POTIM = 0.[0-9],POTIM = 0.1," INCAR
	#sed -i "s,POTIM = 0.[0-9],POTIM = $pim," INCAR
	#sed -i -e 's|IBRION = [0-9]|IBRION = 1|' INCAR
	#sed -i -e 's|EDIFFG = [^\f\r\t\n\v]*|EDIFFG = -0.02|' INCAR
	
	set gr = 0
	set i = 1
	while (${gr} != 1)
		if (-e STOPCAR) then
			set gr = 1
		endif
		echo '============================' >> job.${PBS_JOBID}.ing
		echo 'Cycle' ${i} 'Start' >> job.${PBS_JOBID}.ing
		$MPI $EXEC > $PBS_JOBNAME.log
		mv $PBS_JOBNAME.log $PBS_JOBNAME.${i}.out
		echo 'Cycle' ${i} 'Finished' >> job.${PBS_JOBID}.ing
		set gr = `grep E0 OSZICAR |wc -l`
		echo ' - Ionic step : ' ${gr} >> job.${PBS_JOBID}.ing
		set tt =  `grep 'Elapsed time' OUTCAR | awk '{print $4}'`
		echo ' - Elapsed time : ' ${tt} >> job.${PBS_JOBID}.ing
		set ff =  `vcomparevolume.py | tail -n 1 | awk '{print $6}'`
		echo ' - Volume change : ' ${ff} >> job.${PBS_JOBID}.ing
		cp POSCAR log/${i}POSCAR
		cp CONTCAR log/${i}CONTCAR
		cp XDATCAR log/${i}XDATCAR
		cp OUTCAR log/${i}OUTCAR
		cp OSZICAR log/${i}OSZICAR
		cp CONTCAR POSCAR
		set i = `expr $i + 1`
		if ($i == 6) then
			set gr = 1
		endif
	end
	set j = `expr $i - 1`
	echo '+---------------+' >> job.${PBS_JOBID}.ing
	echo '| ) Converged ( | ' >> job.${PBS_JOBID}.ing
	echo '+---------------+' >> job.${PBS_JOBID}.ing
	cp $PBS_JOBNAME.${j}.out $PBS_JOBNAME.out
	mv $PBS_JOBNAME.?.out log/
	mv job.${PBS_JOBID}.ing job.${PBS_JOBID}.fin
	date >> job.${PBS_JOBID}.fin
endif
