#!/usr/bin/env python
# -*- coding: utf-8 -*-

###########################################################################
#
#  Script to calc the fitness of a parameter set and to print the elements
#  of the Hessian verbosely.
#
############################################################################


#  do the import stuff
import ff_gen.ff_gen as ff_gen
import numpy as np
import ff_gen.objectives.ric_fit3 as ric_fit
import pydlpoly
import molsys.stow as stow
from molsys.util import ff2pydlpoly
import molsys
import shutil
import os

option = [
        ['opt.mfpx', 'x', 'mfpxfile'],
        ['', 'k', 'fparname'],
        ['', 'r', 'reffile']]

shellval = stow.main(stow.sys.argv[1:], option)

fxyz = shellval[0]
fkey = shellval[1]
fref = shellval[2]

prefix = fxyz.split('.')[0]
if fkey == '': fkey = prefix + '.key'
if fref == '': fref = prefix
frefsplit = fref.split('.')
if fref != 'hdf5' and frefsplit[-1] == 'hdf5': fref = ".".join(frefsplit[:-1])

m = molsys.mol.fromFile(fxyz)
m.addon("ff")
m.ff.read(fkey, fit = True)

wm = ff2pydlpoly.wrapper(m)
pd = pydlpoly.pydlpoly("initial")
pd.setup(web = wm, local = False)

m.addon("ric")
m.ric.setup_rics(full = False)

ric = ric_fit.ric_fit()

ff = ff_gen.ff_gen(fref, pd, objective = ric, minimize = True)

print ff.calc_objective(m.ff.variables.vals)
ric.finish()

pd.end()
#os.chdir('..')
#shutil.rmtree('initial')


